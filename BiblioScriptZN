/*************************************************************
*** PRIMER PROCESO QUE SE EJECUTA AL ABRIR LA PLANILLA     ***
*** VINCULADA CON EL EVENTO PARA SU FORMATEO               ***
*** Y AGREGAR UN CUSTOM MENU                               ***
*************************************************************/
function formateoPlanilla(){
  // Add a custom menu to the spreadsheet.
  SpreadsheetApp.getUi() // Or DocumentApp, SlidesApp, or FormApp.
      .createMenu('Nagaryhuna')
      .addItem('Recordatorio de pago', 'BiblioScriptZN.recordatorioPago')
      .addItem('Envío de confirmaciones', 'BiblioScriptZN.envioLinksAConfirmados')
      .addItem('Consultar mails restantes', 'BiblioScriptZN.verificoCuotaMailsmsg')
      .addToUi();
  let ActiveSheet = SpreadsheetApp.getActiveSheet();
  let ActiveCol = ActiveSheet.getLastColumn();
  let sheet = ActiveSheet.getDataRange().getValues();
  let colTemporal = "";
  let colorCelda = '#CFE2F3';
  let colorAlerta = '#faa16e';
  
  // LA PLANILLA YA TIENE FORMATO? EXISTE LA COLUMNA ASISTENCIA?
  colTemporal = sheet[0].indexOf('Asistencia')+1;  

  // SI NO FORMATEO LA PLANILLA Y AGREGO COLUMNAS
  if (colTemporal == 0){
    let columColorAlerta = [ActiveCol+5, ActiveCol];
    let columnas = ['Pendiente', 'Respuesta', 'Envio Info TKs', 'Membresía', 'Pago', 'Recordatorio pago', 'Confirmación', 'NombreEvento', 'FechaPago', 'Valor', 'Forma', 'Asistencia'];
    for(let i = 0; i < columnas.length; i++){
      ActiveSheet.insertColumnAfter(ActiveCol);
      if (columnas[i] == 'Pago' || columnas[i] == 'Pendiente'){
        ActiveSheet.getRange(1, ActiveCol+1).setValue(columnas[i]).setBackground(colorAlerta);
      } else{
        ActiveSheet.getRange(1, ActiveCol+1).setValue(columnas[i]).setBackground(colorCelda);
      }
      ActiveCol = ActiveSheet.getLastColumn();
    }
    tamanioCeldas(columColorAlerta);
    SpreadsheetApp.flush();
    Browser.msgBox('SE FORMATEO LA PLANILLA CORRECTAMENTE', 'Se agregaron las columnas necesarias para el proceso de respuestas.', 
    Browser.Buttons.OK); 
  }
  
  function tamanioCeldas(columColorAlerta){
    let MaxCols = ActiveSheet.getMaxColumns();
    for (let i = 0; i < MaxCols; i++){
      ActiveSheet.autoResizeColumn(i+1);
      if (i == columColorAlerta[0] || i == columColorAlerta[1]){
      }else{
        ActiveSheet.getRange(1, i+1).setBackground(colorCelda);
      }
    }
  }
}

/*************************************************************
*** FUNCIÓN PRINCIPAL DE PRECESO DE LOS DATOS ENVIADOS     ***
*** DESDE EL FORMULARIO DE REGISTRO                        ***
*** CALCÚLA QUE PREGUTAS VIENEN EN EL FORMULARIO           ***
*** TOMA TODOS LOS DATOS QUE CONTESTO EL CLIENTE DE LA     ***
*** PLANILLA DE RESPUESTAS                                 ***
*** CALCULA SI ES 2X1 Y TODOS LOS DESCUENTOS SEGÚN TK      ***
*** LLAMA A TODAS LAS DEMÁS FUNCIONES                      ***
*** ESCRIBE EL ESTADO EN LA PLANILLA, PENDIENTE Y ENVIOS   ***
*************************************************************/
function procesoRespuestas(e, tituloEvento){
  let ActiveSheet = SpreadsheetApp.getActiveSheet();
  let ActiveRow = ActiveSheet.getLastRow();
  let sheet = ActiveSheet.getDataRange().getValues();
  let preguntas = datosPlanillaInfoCursosZN('Preguntas form', tituloEvento);
  let evento = datosPlanillaInfoCursosZN('Cursos', tituloEvento);
  let mail = datosPlanillaInfoCursosZN('Info mail', tituloEvento);
  let inscripcion = {};
  evento.titulo = tituloEvento;
  inicializoInsc(inscripcion);
  buscoPreguntas(preguntas, sheet, inscripcion, ActiveSheet, ActiveRow, evento);
  procesoEvento(evento, inscripcion);

  if (inscripcion.tkORegistro == 'Sí, tengo tarjeta Kadampa' ){
    inscripcion.mail = inscripcion.mailTk;
    checkMembresia(inscripcion, mail);
    if(inscripcion.membresiaTK == 'SIN MEMBRESIA'){
      inscripcion.descuento = '';
    } else {
      inscripcion.descuento = 'si';
    }
  } else if(inscripcion.tkORegistro == 'Es mi primera actividad'){
    inscripcion.membresiaTK = 'SIN MEMBRESIA';
    inscripcion.descuento = '';
    inscripcion.textoError = '';
    inscripcion.nuevo = true;
  } else if(inscripcion.tkORegistro == 'Estoy registrado sin Tarjeta Kadampa'){
    inscripcion.mail = inscripcion.mailReg;
    buscoPersona(inscripcion);
    inscripcion.membresiaTK = 'SIN MEMBRESIA';
    inscripcion.descuento = '';
  }

  determinoValor(inscripcion, evento, mail);
  envioMail(mail, inscripcion, evento);
  nuevoParticipante(inscripcion);
  // envioInfoTK(mail, inscripcion, ActiveSheet, ActiveRow, sheet);
  actualizoPlanilla(ActiveSheet, ActiveRow, sheet, inscripcion, evento);
}

/*************************************************************
*** CONSULTA DIFERENTES DATOS EN LA PLANILLA DEL           ***
*** FORMULARIO SEGÚN EL TIPO DE EVENTO                     ***
*************************************************************/
function procesoEvento(evento, inscripcion){
  switch (evento.Tipo) {
    case 'Curso':
    break;
    case 'Clase':
    break;
    case 'Retiro':
      determinoCDias(inscripcion, evento);
    break;
    case 'Oraciones por la Paz Mundial':
    break;
    case 'Puya':
    break;
    case 'Preceptos':
    break;
    default:
    break;
  }
}

/*************************************************************
*** CHEQUEO RETIRO U OTRO EVENTO CON ELECCIÓN DE COMPLETO  ***
*** O POR DIA                                                ***
*************************************************************/
function determinoCDias(inscripcion, evento){
  let e = armoEstilos();
  switch (inscripcion.cantDias) {
    case 'Voy a participar del evento completo':
      inscripcion.xdia = '';
      inscripcion.asistencia = `${e.b}${e.s}Te anotaste para participar del evento completo.${e.sf}`;
    break;
    case 'Voy a participar por día':
      inscripcion.xdia = '1D';
      evento.Programa = evento.Programa1d;
      evento.ValorGeneral = evento.ValorGeneral1D;
      inscripcion.asistencia = `${e.b}${e.s}Te anotaste para participar por 1 dia.${e.sf}`;
    break;
    case 'Voy a participar sólo Sábado':
      inscripcion.xdia = '1D';
      evento.Programa = evento.Programa1d;
      evento.ValorGeneral = evento.ValorGeneral1D;
      inscripcion.asistencia = `${e.b}${e.s}Te anotaste para participar del día Sábado.${e.sf}`;
    break;
    default:
    break;
  }
}

/*************************************************************
*** TRAE LOS DATOS DE LA PLANILLA DEL FORMULARIO EN BASE   ***
*** AL OBJETO DE PREGUNTAS SEGÚN EL TIPO DE EVENTO         ***
*************************************************************/
function buscoPreguntas(preguntas, sheet, inscripcion, ActiveSheet, ActiveRow, evento){
  Logger.log(JSON.stringify(preguntas));
  inscripcion.nombre = (buscoColumna(preguntas.nombre,sheet) != 0) ? valorPlanilla(preguntas.nombre) : "--";
  inscripcion.apellido = (buscoColumna(preguntas.apellido,sheet) != 0) ? valorPlanilla(preguntas.apellido) : "--";
  inscripcion.mail = (buscoColumna(preguntas.email,sheet) != 0) ? valorPlanilla(preguntas.email) : "";
  inscripcion.mail = inscripcion.mail.trim().toLowerCase();
  inscripcion.mailTk = (buscoColumna(preguntas.emailtk,sheet) != 0) ? valorPlanilla(preguntas.emailtk) : "";
  inscripcion.mailTk = inscripcion.mailTk.trim().toLowerCase();
  inscripcion.cMail = (buscoColumna(preguntas.cMail,sheet) != 0) ? valorPlanilla(preguntas.cMail) : "";
  inscripcion.cMail = inscripcion.cMail.trim().toLowerCase();
  inscripcion.mailReg = (buscoColumna(preguntas.mailReg,sheet) != 0) ? valorPlanilla(preguntas.mailReg) : "";
  inscripcion.mailReg = inscripcion.mailReg.trim().toLowerCase();
  inscripcion.registro = (buscoColumna(preguntas.datos,sheet) != 0) ? valorPlanilla(preguntas.datos) : "";
  inscripcion.barrio = (buscoColumna(preguntas.barrio,sheet) != 0) ? valorPlanilla(preguntas.barrio) : "";
  inscripcion.telefono = (buscoColumna(preguntas.telefono,sheet) != 0) ? valorPlanilla(preguntas.telefono) : "";
  inscripcion.infoTK = (buscoColumna(preguntas.infoTK,sheet) != 0) ? valorPlanilla(preguntas.infoTK) : "";
  inscripcion.tkORegistro = (buscoColumna(preguntas.tkORegistro,sheet) != 0) ? valorPlanilla(preguntas.tkORegistro) : "";
  inscripcion.pais = (buscoColumna(preguntas.pais,sheet) != 0) ? valorPlanilla(preguntas.pais) : "Argentina";
  inscripcion.envioInfoTk = (buscoColumna(preguntas.envioInfoTk,sheet) != 0) ? valorPlanilla(preguntas.envioInfoTk) : "";
  inscripcion.envioInfoTkR = (buscoColumna(preguntas.envioInfoTkR,sheet) != 0) ? valorPlanilla(preguntas.envioInfoTkR) : "";
  if(evento.Tipo == 'Retiro'){
    inscripcion.cantDias = (buscoColumna(preguntas.completoxd,sheet) != 0) ? valorPlanilla(preguntas.completoxd) : "";
    inscripcion.grabaciones = (buscoColumna(preguntas.grabaciones,sheet) != 0) ? valorPlanilla(preguntas.grabaciones) : "";
  }
  function valorPlanilla(valCampo){
    return ActiveSheet.getRange(ActiveRow, buscoColumna(valCampo,sheet)).getValue();
  }
}

/*************************************************************
*** DETERMINA EL VALOR DEL EVENTO SEGÚN LA MEMBRESÍA DEL   ***
*** PARTICIPANTE Y LOS DESCUENTOS QUE APLICAN              ***
*************************************************************/
function determinoValor(inscripcion, evento, mail){
  Logger.log(JSON.stringify(inscripcion));
  Logger.log(JSON.stringify(evento));
  switch (inscripcion.membresiaTK){
    case "TK CLASES":
      inscripcion.aPagar = evento['ValorTKClases'+inscripcion.xdia];
      chequeoImporte(inscripcion, mail, evento);
    break;
    case "TK CORAZÓN":
      inscripcion.aPagar = evento['ValorTKCorazon'+inscripcion.xdia];
      chequeoImporte(inscripcion, mail, evento);
    break;
    case "TK BENEFACTOR":
      inscripcion.aPagar = evento['ValorTKBenefactor'+inscripcion.xdia];
      chequeoImporte(inscripcion, mail, evento);
    break;
    case "TK BENEFACTOR PLUS":
      inscripcion.aPagar = evento['ValorTKBenefactorPlus'+inscripcion.xdia];
      chequeoImporte(inscripcion, mail, evento);
    break;
    case "SIN MEMBRESIA":
      inscripcion.aPagar = evento['ValorGeneral'+inscripcion.xdia];
      chequeoImporte(inscripcion, mail, evento);
      inscripcion.descuento = '';
    break; 
    default:
      Logger.log('no pasa por ninguna opción tk');
      inscripcion.aPagar = '--';
    break;
  }
}

/*************************************************************
*** FUNCIONES QUE ARMAN LOS TEXTOS INICIAL Y DETALLE DEL   ***
*** PAGO Y DESCUENTO APLICADO SEGÚN EL IMPORTE QUE TENGA   ***
*** QUE ABONAR EL PARTICIPANTE Y EL TIPO DE MEMBRESÍA      ***
*************************************************************/
function chequeoImporte(inscripcion, mail, evento){
  let e = armoEstilos();
  if (inscripcion.descuento == 'si'){
    inscripcion.descuento = textDesc(inscripcion, evento);
  }
  if (inscripcion.aPagar != 0){
    inscripcion.textoInicial = mail.textoInicial;
    inscripcion.detallePago = `${e.b2}${e.f22}Valor del evento: $${evento.ValorGeneral}${e.b}Importe a pagar: $${e.fs}${e.s}
    ${e.f22G}${inscripcion.aPagar}${e.sf}${e.fs}`;
  }else {
    inscripcion.textoInicial = mail.textoInicialConfirmado;
    inscripcion.aPagar = 0;
    inscripcion.detallePago = '';
    mail.pagoTransfer = '';
  }
}
function textDesc(inscripcion, evento){
  if(inscripcion.aPagar != evento.ValorGeneral){
    let e = armoEstilos();
    let desc = inscripcion.membresiaTK;
    return `${e.b}${e.f22}Se aplicó descuento de tarjeta Kadampa ${e.fs}${e.f22G}${desc.replace('TK ', '')}${e.fs}`;
  } else{
    return '';
  }
}

/*************************************************************
*** TRAIGO LA INFO DE LAS PLANILLAS CURSOS, INFO MAIL Y    ***
*** PREGUNTAS DE FORMS Y DEVUELVO OBJETOS CON LOS DATOS    ***
*************************************************************/
function datosPlanillaInfoCursosZN(hoja, tituloEvento){
  let ss = SpreadsheetApp.openById("1RfLwLB2yF04uF6FtQ0AUp21TQJViE9bqundAXL7Zi_4");
  let sheetDatos = ss.getSheetByName(hoja);
  let datos = sheetDatos.getDataRange().getValues();
  let inf = {};
  switch (hoja) {
    case 'Preguntas form':
      inf = procesoHojaPreguntas(datos); 
    break;
    case 'Cursos':
      inf = procesoHojaCursos(datos,tituloEvento);
    break;
    case 'Info mail':
      inf = procesoHojaMail(datos);
    break;
    default:
    break;
  }

  function procesoHojaPreguntas(datos){
    let infPreg ={};
    for (var i = 1; i < datos.length; i++) {
      infPreg[datos[i][0]] = datos[i][1];      
    }
    // Logger.log('armo obj preg' + JSON.stringify(infPreg));
    return infPreg;
  }

  function procesoHojaCursos(datos, tituloEvento){
    let columnas = traigoEncabezados(datos);
    let infCursos = {};
    for (var i = 0; i < datos.length; i++) {
      if(datos[i][0] == tituloEvento){
        columnas.forEach(function(columna){
          infCursos[columna] = vsheet(i+1,columna)
        });
      }
    }
    return infCursos;
  }
  function procesoHojaMail(datos){
    let columnas = traigoEncabezados(datos);
    let infMail = {};
    for (var i = 0; i < datos.length; i++) {
      columnas.forEach(function(columna){
      infMail[columna] = vsheet(i+1,columna)
      });
    }
    return infMail;
  }
  function vsheet(i, campo){
    return sheetDatos.getRange(i, buscoColumna(campo, datos)).getValue();
  }
  function traigoEncabezados(datos){
    let encabezados = datos[0];
    return encabezados;
  }
  return inf;
}

/*************************************************************
*** AHORRA CÓDIGO EN CADA FUNCIÓN DÓNDE TRAE DATOS DE      ***
*** LA PLANILLA INFORMACIÓN DE CURSOS                      ***
*************************************************************/
function buscoColumna(campo, datos){
  let columna = datos[0].indexOf(campo)+1;
  return columna;
}

/**************************************************************
*** ARMO UN OBJETO CON ESTILOS PARA USAR EN EL HTML         ***
*** DEL CUERPO DE LOS EMAILS                                ***
**************************************************************/
function armoEstilos(){
  var estilos = {
        f28: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:28px;line-height:36px;color:#3c4043'>",
        f28W: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:28px;line-height:36px;color:#ffffff'>",
        f22G: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:22px;line-height:36px;color:#0a9426'>",
        f22: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:22px;line-height:36px;color:#3c4043'>",
        f18: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:18px;line-height:36px;color:#3c4043'>",
        f18G: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:18px;line-height:36px;color:#0a9426'>",
        f18B: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:18px;line-height:36px;color:#4575ec'>",
        f22T: "<span style='margin-left:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:22px;line-height:36px;color:#3c4043'>",
        f22P: "<span style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:22px;line-height:36px;color:#a66cf5'>",
        fs: "</span>",
        b : "<br>",
        b2: "<br><br>",
        s : "<strong>",
        sf: "</strong>"
  }
  return estilos;
}

/**************************************************************
*** CHEQUEA E INFORMA LA CANTIDAD DE ENVÍOS                 ***
*** RESTANTES PARA EL DÍA DE LA FECHA                       ***
**************************************************************/
  function verificoCuotaMailsmsg(){
  let emailQuotaRemaining = MailApp.getRemainingDailyQuota();
  let date = new Date();
  let fechaActual = (date.toLocaleString('es-AR', {
    //weekday: 'short', // long, short, narrow
    day: 'numeric', // numeric, 2-digit
    //year: 'numeric', // numeric, 2-digit
    month: 'long', // numeric, 2-digit, long, short, narrow
    hour: 'numeric', // numeric, 2-digit
    minute: 'numeric', // numeric, 2-digit
    second: 'numeric', // numeric, 2-digit
  }));
  try {
    Browser.msgBox('CUOTA DE MAILS RESTANTE', 'Restan: ' + emailQuotaRemaining + ' envíos para hoy ' + fechaActual, Browser.Buttons.OK); 
  } catch (error) { 
    Logger.log('CUOTA DE MAILS RESTANTE: ' + emailQuotaRemaining + ' envíos para hoy ' + fechaActual);
  }
  return emailQuotaRemaining;
}

function chkEnvio(){
  let puedeEnviar = true;
  let restantes = verificoCuotaMailsmsg();
  if (restantes < 1){
    puedeEnviar = false;
  }
  return puedeEnviar
}

/**************************************************************
*** FORMATEO EN HTML LOS TEXTOS DE LA PLANILLA INFO MAIL    ***
*** PARA USARLOS EN LA RESPUESTA DE MAIL                    ***
**************************************************************/
function formatoTexto(text){
  let formattedText = text.replace(/\n/g, "<br>");
  return formattedText;
}

/**************************************************************
*** ARMO ENCABEZADO Y PIE DEL MAIL CON TEXTOS DEL           ***
*** OBJETO MAIL                                             ***
**************************************************************/
function encabezadoyPieMail(mail){
  let e = armoEstilos();
  let partesMail = {
      encabezadoMail: "<table width='720' border='0' align='center' bgcolor='white' cellpadding='0' cellspacing='0'>"+
        "<tr bgcolor='#2784d6'><td><img src='https://meditarenargentina.org/wp-content/uploads/2022/11/unnamed.png' alt='Social Media' width='720' usemap='#m_-6367196319079066917_Redes' title='CMKA Social' border='0' style='display:block'>"+
        "<map name='m_-6367196319079066917_Redes' id='m_-6367196319079066917Redes'>"+
        "<area shape='rect' coords='01,01,90,70'  href='https://www.facebook.com/meditarenzonanorte' alt='Facebook CMKA' target='_blank'>"+
        "<area shape='rect' coords='92,01,188,70' href='https://www.instagram.com/meditarenzonanorte' alt='Instagram CMKA' target='_blank'>"+
        "<area shape='rect' coords='190,01,303,70' href='https://www.youtube.com/channel/UC8Bmrclk97g2onCsWRwZCyw' alt='Youtube CMKA' target='_blank'>"+
        "<area shape='rect' coords='306,01,410,70' href='https://open.spotify.com/artist/0SKgzlnrfGPaeQfUUgDhb7/discography/album' alt='Spotify' target='_blank'>"+
        "<area shape='rect' coords='412,01,512,70' href='https://api.whatsapp.com/send?phone=541166633921' alt='Whatsapp' target='_blank'>"+
        "<area shape='rect' coords='515,01,616,70' href='https://twitter.com/meditarenarg' alt='Twitter CMKA' target='_blank'>"+
        "<area shape='rect' coords='618,01,720,70' href='https://meditarenzonanorte.org/' alt='web Centro de meditación KadampaArgentina' target='_blank'>"+
        "</map></td></tr><tr bgcolor='#fff'><td><img src='https://meditarenargentina.org/wp-content/uploads/2022/11/unnamed.jpg' width='720' style='display:block' alt='Banner Header'>"+
        "</td></tr><tr><td valign='middle' style='margin-bottom:32px;font-family:Google Sans,Roboto,Arial,Helvetica,sans-serif;font-style:normal;font-size:28px;line-height:36px;color:#3c4043'>",
      pieMail: "</td></tr><tr height='80px' bgcolor='#B88477'><td align='center' valign='middle' style='padding:15px 2px 2px 15px;'>" + e.f28W + mail.saludo + e.fs + "</td></tr>"
  }
  return partesMail;
}

/**************************************************************
*** ACTUALIZO CAMPOS EN LA PLANILLA DEL FORMULARIO CON      ***
*** IMPORTE A PAGAR, DATOS DE TK Y ENVIO O NO DEL MAIL      ***
**************************************************************/
function actualizoPlanilla(ActiveSheet, ActiveRow, sheet, inscripcion, evento){
  ActiveSheet.getRange(ActiveRow, buscoColumna('Pendiente',sheet)).setValue('$'+inscripcion.aPagar).setHorizontalAlignment('right');
  ActiveSheet.getRange(ActiveRow, buscoColumna('Respuesta',sheet)).setValue('ENVIADA').setBackground('#67ad63').setFontColor('white');
  ActiveSheet.getRange(ActiveRow, 1).setBackground('#b3d1ff');
  if (inscripcion.completoInfo){
    ActiveSheet.getRange(ActiveRow, buscoColumna('Nombre',sheet)).setValue(inscripcion.nombre).setHorizontalAlignment('center');
    ActiveSheet.getRange(ActiveRow, buscoColumna('Apellido',sheet)).setValue(inscripcion.apellido).setHorizontalAlignment('center');
    ActiveSheet.getRange(ActiveRow, buscoColumna('Dirección de correo electrónico',sheet)).setValue(inscripcion.mail).setHorizontalAlignment('center');
    ActiveSheet.getRange(ActiveRow, buscoColumna('Celular',sheet)).setValue(inscripcion.telefono).setHorizontalAlignment('center');
    ActiveSheet.getRange(ActiveRow, buscoColumna('¿De que barrio sos?',sheet)).setValue(inscripcion.barrio).setHorizontalAlignment('center');
    let tituloE = ActiveSheet.getRange(2, buscoColumna('NombreEvento',sheet)).getValue();
    if(tituloE == ''){
      ActiveSheet.getRange(2, buscoColumna('NombreEvento',sheet)).setValue(evento.Nombre).setHorizontalAlignment('left');
    }
  }
  ActiveSheet.getRange(ActiveRow, buscoColumna('Membresía',sheet)).setValue(inscripcion.membresiaTK).setHorizontalAlignment('left');    
  if(inscripcion.aPagar == 0){
      ActiveSheet.getRange(ActiveRow, buscoColumna('Pago',sheet)).setValue('OK').setHorizontalAlignment('center').setBackground('#67ad63');
  } else{
    ActiveSheet.getRange(ActiveRow, buscoColumna('Pago',sheet)).setValue('CH').setHorizontalAlignment('center').setBackground('#e0cc14');
  }
  SpreadsheetApp.flush();
}

/**************************************************************
*** ACTUALIZO CAMPOS EN LA PLANILLA DEL FORMULARIO CON      ***
*** IMPORTE A PAGAR, DATOS DE TK Y ENVIO O NO DEL MAIL      ***
**************************************************************/
function envioMail(mail, inscripcion, evento){
  let e = armoEstilos();
  let subject = evento.Tipo + ' ' + evento.Fecha + ' ' + evento.Nombre;
  let partesMail = encabezadoyPieMail(mail);
  let disponibilidad = '';
  if(evento.Disponibilidad != 'en vivo'){
    disponibilidad = `${e.f18B}Disponibilidad: ${e.fs}${e.f18}${e.s} ${evento.Disponibilidad} ${e.sf}${e.fs}${e.b}`;}
  let detalle = `${e.f22} ${e.b2} ${e.s}DETALLES DEL EVENTO: ${e.sf}${e.fs}${e.b}
  ${e.f18B}Nombre: ${e.fs}${e.f18}${e.s} ${evento.Nombre} ${e.sf}${e.fs}${e.b}
  ${e.f18B}Fecha y hora: ${e.fs}${e.f18}${e.s} ${evento.Fecha} ${e.sf}${e.fs}${e.b}
  ${e.f18B}Lugar: ${e.fs}${e.f18}${e.s}${evento.Lugar}${e.sf}${e.b}
  ${e.f18B}Maestr@: ${e.fs}${e.f18}${e.s}${evento.Maestrxs}${e.sf}${e.b} 
  ${disponibilidad}${e.b}${evento.Programa}${e.fs}`;
  let htmlBody =  `${partesMail.encabezadoMail}${e.f28}${e.b}¡Hola ${e.s}${inscripcion.nombre} ${inscripcion.apellido}!${e.sf}
  ${e.f22}${inscripcion.textoInicial}${inscripcion.asistencia}${inscripcion.detallePago}${inscripcion.descuento}${e.fs}${e.f18B}
  ${inscripcion.textoError}${e.fs}${e.f18}${mail.pagoTransfer}
  ${e.fs}${detalle}${e.f18}${mail.dudas}${e.fs}${partesMail.pieMail}`;
  let advancedOpts = {name: "Inscripciones - Nagaryhuna", htmlBody: htmlBody};
  let emailBody = "¡Hola! " + "\nGracias por tu inscripción al Curso " + evento.Nombre + "\nen fecha " +
          "\nPróximamente recibirás un email con más detalles sobre éste evento y tu información de pago." +
          "\nMuchas Gracias";
  MailApp.sendEmail(inscripcion.mail, subject, emailBody, advancedOpts);
//   try {
//   MailApp.sendEmail({
//     to: "destinatario@example.com",
//     subject: "Asunto del correo",
//     body: "Contenido del correo"
//   });
//   // El correo electrónico se envió exitosamente
// } catch (error) {
//   // Ocurrió un error durante el envío del correo electrónico
//   console.error("Error al enviar el correo electrónico:", error);
// }
}

/**************************************************************
*** CHEQUEA EN BASE A LA ELECCIÓN DE MEMBRESÍA DE USUARIO   ***
*** SI ESTÁ ACTIVA CONSULTANDO PLANILLA TKS PAGOS POR AÑO   ***
**************************************************************/
function checkMembresia(inscripcion, mail){
  let ss2 = SpreadsheetApp.openById('1glxhF229H3fuWPrpzExpPX1YPcXhGrY1-mBw8TfToMk');
  let sheetDatosTKZN = ss2.getSheetByName('TK 2023');
  let datosTKZN = sheetDatosTKZN.getRange(3, 1, sheetDatosTKZN.getLastRow(), 9).getValues();
  inscripcion.textoError = '';
  inscripcion.membresiaTK = '';
  let correoPlanilla = '';
  buscoPlanillaZN();

  function buscoPlanillaZN(){
    for(let i = 0;i<datosTKZN.length; i++){
      correoPlanilla = datosTKZN[i][7].toString();
      correoPlanilla = correoPlanilla.trim().toLowerCase();
      if(correoPlanilla == inscripcion.mail){
        inscripcion.nombre = datosTKZN[i][1];
        inscripcion.apellido = datosTKZN[i][2];
        inscripcion.telefono = datosTKZN[i][6];
        inscripcion.barrio = datosTKZN[i][8];
        inscripcion.completoInfo = true;
        if(datosTKZN[i][3] == 'A' ){
          inscripcion.textoError = '';
          switch (datosTKZN[i][4]){
            case 'CLA':
              inscripcion.membresiaTK = 'TK CLASES';
            break;
            case 'COR':
              inscripcion.membresiaTK = 'TK CORAZÓN';
            break;
            case 'BEN':
              inscripcion.membresiaTK = 'TK BENEFACTOR';
            break;
            case 'BENP':
              inscripcion.membresiaTK = 'TK BENEFACTOR PLUS';
            break;
            default:
              inscripcion.membresiaTK = 'SIN MEMBRESIA';
            break;
          }
        } else {
          inscripcion.membresiaTK = 'SIN MEMBRESIA';
          inscripcion.textoError = mail.errorMembresia;
        }
        break;
      }
    }
    if (inscripcion.membresiaTK == ''){
      inscripcion.membresiaTK = 'SIN MEMBRESIA';
      inscripcion.textoError = mail.errorMembresia;
    }
  }
}

/**************************************************************
*** SI ES NUEVO PARTICIPANTE Y ACCEDE A DEJAR SUS DATOS     ***
*** REGISTRADOS LO CARGO EN LA PLANILLA                     ***
*** REGISTRO DE PARTICIPANTES                               ***
**************************************************************/
function nuevoParticipante(inscripcion){
  let ss3 = SpreadsheetApp.openById('1WeqfjxRu3dr7HyemXOhtJbqnl0uAPFrlzH_ELrUH8nY');
  let sheetDatosRegistro = ss3.getSheetByName('REGISTRO');
  if(inscripcion.nuevo == true){
    let resp1 = "Deseo que se guarden mis datos";
    let resp2 = "Deseo recibir el boletín por mail";
    let encontrado = false;
    if(inscripcion.registro.includes(resp1)){
      encontrado = buscoPersona(inscripcion);
      if (encontrado == false){
        let date = new Date();
        let ahora = (date.toLocaleString('es-AR', {
          day: 'numeric', // numeric, 2-digit
          month: 'long', // numeric, 2-digit, long, short, narrow
          hour: 'numeric', // numeric, 2-digit
          minute: 'numeric', // numeric, 2-digit
          second: 'numeric', // numeric, 2-digit
        }));
        let boletin = ''
        if(inscripcion.registro.includes(resp2)){
          boletin = 'Si';
        } else {
          boletin = 'No';
        }
        sheetDatosRegistro.appendRow([inscripcion.nombre, inscripcion.apellido, inscripcion.mail, inscripcion.cMail, inscripcion.telefono, inscripcion.barrio, boletin, ahora]);
      }
    }
  }
}

/**************************************************************
*** BUSCO EN PLANILLA REGISTRO                              ***
**************************************************************/
function buscoPersona(inscripcion){
  let ss3 = SpreadsheetApp.openById('1WeqfjxRu3dr7HyemXOhtJbqnl0uAPFrlzH_ELrUH8nY');
  let sheetDatosRegistro = ss3.getSheetByName('REGISTRO');
  let datosRegistro = sheetDatosRegistro.getRange(2, 1, sheetDatosRegistro.getLastRow(), 8).getValues();
  let correoPlanilla = '';
  let encontrado = false;
  for(let i = 0;i<datosRegistro.length; i++){
    correoPlanilla = datosRegistro[i][2].toString();
    correoPlanilla = correoPlanilla.trim().toLowerCase();
    if(correoPlanilla == inscripcion.mail){
      encontrado = true;
      if(inscripcion.nuevo == false){
        inscripcion.nombre = datosRegistro[i][0];
        inscripcion.apellido = datosRegistro[i][1];
        inscripcion.mail = datosRegistro[i][2];
        inscripcion.telefono = datosRegistro[i][4];
        inscripcion.barrio = datosRegistro[i][5];
        inscripcion.completoInfo = true;
      }
      break;
    }
  }
  if(encontrado == false){
    inscripcion.textoError = `<br>No se ha encontrado tu registro, podés registrarte desde <a href='https://docs.google.com/forms/d/e/1FAIpQLSflG-RfcL2pcYpfmWGsYOcNt3xVjPbhpM_XFLFzLgdm1CMaSw/viewform'>este link</a>.
    Muchas gracias y lamentamos el inconveniente. ❤️`;
  }
  return encontrado;
}

function inicializoInsc(inscripcion){
  inscripcion.textoError = '';
  inscripcion.xdia = '';
  inscripcion.descuento = '';
  inscripcion.asistencia = '';
  inscripcion.nuevo = false;
}

/**************************************************************
*** ENVIO MAILS DE CONFIRMACION                            ***
**************************************************************/
function envioConfirmacion(){
  let ActiveSheet = SpreadsheetApp.getActiveSheet();
  let ActiveRow = ActiveSheet.getLastRow();
  let sheet = ActiveSheet.getDataRange().getValues();
  let inscripciones = ActiveSheet.getRange(1, 1, ActiveSheet.getLastRow(),ActiveSheet.getLastColumn()).getValues();
  let mensaje = {
    titulo: 'ENVÍO MAILS DE CONFIRMACIÓN',
    continua: 'Seguro que quiere continuar?',
    exito: 'La acción ha sido realizada con éxito. Correos enviados: ',
    noenvio: 'No hay correos a enviar'
  }
  let tituloEvento = ActiveSheet.getRange(1, buscoColumna('NombreEvento', sheet)).getValue();
  let preguntas = datosPlanillaInfoCursosZN('Preguntas form', tituloEvento);
  let evento = datosPlanillaInfoCursosZN('Cursos', tituloEvento);
  let mail = datosPlanillaInfoCursosZN('Info mail', tituloEvento);
  let inscripcion = {};
  evento.titulo = tituloEvento;
  inicializoInsc(inscripcion);
  buscoPreguntas(preguntas, sheet, inscripcion, ActiveSheet, ActiveRow, evento);
  procesoEvento(evento, inscripcion);
  let response = Browser.msgBox(mensaje.titulo, mensaje.continua, Browser.Buttons.YES_NO); 
  if ( response == "yes"){
    let correosEnviados = recorroPlanilla();
    if(correosEnviados > 0){
      Browser.msgBox(mensaje.titulo, mensaje.exito + correosEnviados, Browser.Buttons.OK); 
    } else{
      Browser.msgBox(mensaje.titulo, mensaje.noenvio, Browser.Buttons.OK); 
    }
  }
  recorroPlanilla();

  function recorroPlanilla(){
    let e = armoEstilos();
    for(var i = 0;i<inscripciones.length; i++){
        if(inscripciones[i][pendiente] == 0){
          textoPago = (inscripciones[i][pago]).toString().trim().toUpperCase();
          if(textoPago == 'OK'){
            if(inscripcion[i][confirmacion] == ''){
              datosInscripcion = traigoDatosParticipante(i);
              datosCurso = traigoDatosCursos(tituloEvento);
              // Logger.log("tipo de insc " + datosInscripcion.eventoFinDeSemana);
              if(datosInscripcion.eventoFinDeSemana == 'VOY A PARTICIPAR DEL FIN DE SEMANA'){
                programa = datosCurso.programaFinDeSemana;
                datosInscripcion.eventoFinDeSemana = "<br>Tu inscripción: " + datosInscripcion.eventoFinDeSemana;
              } else {
                programa = datosCurso.programa;
              }
              datosMail = CargoDatosMail();
              textoAcceso = chModalidad();
              if(datosCurso.tipo == "Reto 21 dias"){
                avisoOnline = "";
                textoAcceso = datosMail.infoAccesoPresencialSinLink;
              }
              partesMail = encabezadoyPieMail(datosMail);
              saludoInicial = e.styleF28 + "¡Hola " + '<strong>' + datosInscripcion.nombre  + " " + 
                              datosInscripcion.apellido + "</strong>!" + e.finStyle;
              htmlBody = partesMail.encabezadoMail + saludoInicial + e.styleF22 + datosMail.TextoInicialConfirmado + e.finStyle + 
                          e.styleF22Tab + 'Membresía: ' + e.finStyle + e.styleF22Morado + datosInscripcion.membresia + e.finStyle + '<br>' +
                          e.styleF18 + datosInscripcion.completoDia + datosInscripcion.completoDiaRetiro + datosInscripcion.eventoFinDeSemana +
                          " " + datosInscripcion.diasQueParticipa + datosInscripcion.introduccion + e.finStyle + 
                          datosEvento + e.styleF18 + programa + e.finStyle + e.styleF22Morado + datosCurso.webDelEvento +
                          e.finStyle + e.styleF18 + textoAcceso + e.finStyle + 
                          e.styleF18Blue + datosInscripcion.linksYoutube + e.finStyle + e.styleF22Morado + avisoOnline + e.finStyle +
                          e.styleF18 + datosMail.Dudas + e.finStyle + partesMail.pieMail;
              envioMail(htmlBody, datosInscripcion.mail, asunto);
              
              ActiveSheet.getRange(i+1, buscoColumna('Confirmación', sheet)).setValue('ENVIADA').setBackground('#67ad63').setFontColor('white');
              correos += 1;
            }
          }
        }
    }
    return correos;
  }
}

function envioInfoTK(mail, inscripcion, ActiveSheet, ActiveRow, sheet){
  if(inscripcion.envioInfoTk == 'Si!' || inscripcion.envioInfoTkR == 'Si!'){
    let col = 0;
    let seEnvia = chkEnvio();
    if(seEnvia == true){
      let saludoInfo = `¡Hola <font color=\"green\"><strong>" + Nombre + " " + Apellido + "</strong></font>" + "!" + "<br/>Espero que estés muy bien.<br/><br/>Muchas gracias por tu interés en nuestras actividades.<br/>`;  
      let subject = "Información solicitada sobre Tarjetas Kadampa";
      let emailBody = "";
      let htmlBody = saludoInfo;
      let advancedOpts = { name: "INFORMACIÓN - CMKA", htmlBody: htmlBody};
      MailApp.sendEmail(mail, subject, emailBody, advancedOpts);
      col = sheet[0].indexOf('Envio Info TKs')+1;
      ActiveSheet.getRange(ActiveRow, col).setValue(mailRestantes).setBackground('#67ad63').setFontColor('white');
    } else {
        col = sheet[0].indexOf('Envio Info TKs')+1;
        ActiveSheet.getRange(ActiveRow, col).setValue(mailRestantes).setBackground('#f02e61').setFontColor('white');
        ActiveSheet.getRange(ActiveRow, buscoColumna('Pendiente',sheet)).setValue('$'+inscripcion.aPagar).setHorizontalAlignment('right');
    }
  }
}
